# -*- coding: utf-8 -*-
"""Tic-Tac-Toe Game by Dipesh.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UkPvn48lsZvR0ORyFn9tXOqrAQ4Pv-dR
"""

#Tic-Tac-Toe Game by Dipesh
def main():
  board = [['_' for i in range(3)] for i in range(3)] 
  is_x = True
  game_over = False
  generate_board(board)
  while not game_over: 
    try:
      square = board_position(select_square())
      place_piece(square, is_x, board)
    except ValueError:
      print("Please select a number between 1 to 9 that is unoccupied")
      continue
    game_over = is_win(board) or is_draw(board)
    is_x = not is_x
    generate_board(board)

def generate_board(board):
  for row in board:
    print(row)
    
def select_square():
  user_input = int(input("Select a square: "))
  if not 1 <= user_input <= 9:
    raise ValueError
  return user_input

def board_position(square):
  square -= 1
  return (square // 3,square % 3)

def place_piece(square,is_x, board):
  i,j= square
  if board[i][j] == '_':
    board[i][j] = 'X' if is_x else 'O' 
  else:
    raise ValueError

def is_draw(board):
  for row in board:
    for col in row:
      if col == '_':
        return False
  print("Game Over! Nobody wins.")
  return True

def is_win(board):
  winner = None
  for i in range(3):
    #Horizontal
    if board[i][0] == board[i][1] == board[i][2] and board[i][1] != '_':
      winner = board[0][0]
    #Vertical
    elif board[0][i] == board[1][0] == board[2][i] and board[0][i] != '_':
      winner = board[0][0]
    #Diagonal
    elif board[1][1] != '_':
      if board[0][0] == board[1][1] == board[2][2] or board[0][2] == board[1][1] == board[2][0]:
        winner = board[0][0]
    
    if winner is not None:
      generate_board(board)
      print(f"{winner} is winner")
      return True
    return False
  
if __name__ == "__main__":
  main()